{
  "ReRoutes": [
    // --> ApiOne Service Part
    {
      "DownstreamPathTemplate": "/api/{url}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5000
        },
        {
          "Host": "localhost",
          "Port": 5001
        },
        {
          "Host": "localhost",
          "Port": 5002
        }
      ],
      "UpstreamPathTemplate": "/one/{url}",
      "UpstreamHttpMethod": [
        "Get",
        "Post"
      ],
      "AuthenticationOptions": { //需要验证身份的设置项，如果不配置AuthenticationOptions，代表无需身份验证，直接路由到服务
        "AuthenticationProviderKey": "ApiOneServerKey", //需要验证的服务标志
        "AllowedScopes": []
      },
      "ServiceName": "ApiOne",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "RateLimitOptions": {
        "ClientWhitelist": [],
        "EnableRateLimiting": true,
        "Period": "2s",
        "Limit": 3,
        "PeriodTimespan": 5
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 5,
        "TimeoutValue": 5000
      },
      "UseServiceDiscovery": true
    },
    // --> ApiTwo Service Part
    {
      "DownstreamPathTemplate": "/api/{url}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5003
        },
        {
          "Host": "localhost",
          "Port": 5004
        },
        {
          "Host": "localhost",
          "Port": 5005
        }
      ],
      "UpstreamPathTemplate": "/two/{url}",
      "UpstreamHttpMethod": [
        "Get",
        "Post"
      ],
      "AuthenticationOptions": { //需要验证身份的设置项，如果不配置AuthenticationOptions，代表无需身份验证，直接路由到服务
        "AuthenticationProviderKey": "ApiTwoServerKey", //需要验证的服务标志
        "AllowedScopes": []
      },
      "ServiceName": "ApiTwo",
      // "LoadBalancer": "RoundRobin",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "RateLimitOptions": {
        "ClientWhitelist": [],
        "EnableRateLimiting": true,
        "Period": "10s",
        "Limit": 30,
        "PeriodTimespan": 5
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 5,
        "TimeoutValue": 5000
      },
      "UseServiceDiscovery": true // use Consul service discovery
    }
  ],
  "GlobalConfiguration": {
    "ServiceDiscoveryProvider": {
      "Host": "localhost",
      "Port": 8500,
      "Type": "consul"
    },
    "RateLimitOptions": {
      "DisableRateLimitHeaders": false, // Http头  X-Rate-Limit 和 Retry-After 是否禁用
      "QuataExceededMessage": "太多次请求，请停一会", //// 当请求过载被截断时返回的消息
      "HttpStatusCode": 999, //当请求过载被截断时返回的http status
      "ClientIdHeader": "client_id" //用来识别客户端的请求头，默认是 ClientId
    }
  }
}